<?php
namespace wokaextend\components\pay\wechatpay;

use wokaextend\wechat\config\WechatConfig;
use wokaextend\components\pay\wechatpay\WxPayException;


/**
 * 
 * 退款查询输入对象
 * @author widyhu
 *
 */
class WxPayRefundQuery extends WxPayDataBase
{
	/**
     * 设置微信分配的公众账号ID
     * @param string $value 
     **/
	public function SetAppid($value)
	{
		$this->values['appid'] = $value;
	}
	/**
     * 获取微信分配的公众账号ID的值
     * @return 值
     **/
	public function GetAppid()
	{
		return $this->values['appid'];
	}
	/**
     * 判断微信分配的公众账号ID是否存在
     * @return true 或 false
     **/
	public function IsAppidSet()
	{
		return array_key_exists('appid', $this->values);
	}


	/**
     * 设置微信支付分配的商户号
     * @param string $value 
     **/
	public function SetMch_id($value)
	{
		$this->values['mch_id'] = $value;
	}
	/**
     * 获取微信支付分配的商户号的值
     * @return 值
     **/
	public function GetMch_id()
	{
		return $this->values['mch_id'];
	}
	/**
     * 判断微信支付分配的商户号是否存在
     * @return true 或 false
     **/
	public function IsMch_idSet()
	{
		return array_key_exists('mch_id', $this->values);
	}


	/**
     * 设置微信支付分配的终端设备号
     * @param string $value 
     **/
	public function SetDevice_info($value)
	{
		$this->values['device_info'] = $value;
	}
	/**
     * 获取微信支付分配的终端设备号的值
     * @return 值
     **/
	public function GetDevice_info()
	{
		return $this->values['device_info'];
	}
	/**
     * 判断微信支付分配的终端设备号是否存在
     * @return true 或 false
     **/
	public function IsDevice_infoSet()
	{
		return array_key_exists('device_info', $this->values);
	}


	/**
     * 设置随机字符串，不长于32位。推荐随机数生成算法
     * @param string $value 
     **/
	public function SetNonce_str($value)
	{
		$this->values['nonce_str'] = $value;
	}
	/**
     * 获取随机字符串，不长于32位。推荐随机数生成算法的值
     * @return 值
     **/
	public function GetNonce_str()
	{
		return $this->values['nonce_str'];
	}
	/**
     * 判断随机字符串，不长于32位。推荐随机数生成算法是否存在
     * @return true 或 false
     **/
	public function IsNonce_strSet()
	{
		return array_key_exists('nonce_str', $this->values);
	}

	/**
     * 设置微信订单号
     * @param string $value 
     **/
	public function SetTransaction_id($value)
	{
		$this->values['transaction_id'] = $value;
	}
	/**
     * 获取微信订单号的值
     * @return 值
     **/
	public function GetTransaction_id()
	{
		return $this->values['transaction_id'];
	}
	/**
     * 判断微信订单号是否存在
     * @return true 或 false
     **/
	public function IsTransaction_idSet()
	{
		return array_key_exists('transaction_id', $this->values);
	}


	/**
     * 设置商户系统内部的订单号
     * @param string $value 
     **/
	public function SetOut_trade_no($value)
	{
		$this->values['out_trade_no'] = $value;
	}
	/**
     * 获取商户系统内部的订单号的值
     * @return 值
     **/
	public function GetOut_trade_no()
	{
		return $this->values['out_trade_no'];
	}
	/**
     * 判断商户系统内部的订单号是否存在
     * @return true 或 false
     **/
	public function IsOut_trade_noSet()
	{
		return array_key_exists('out_trade_no', $this->values);
	}


	/**
     * 设置商户退款单号
     * @param string $value 
     **/
	public function SetOut_refund_no($value)
	{
		$this->values['out_refund_no'] = $value;
	}
	/**
     * 获取商户退款单号的值
     * @return 值
     **/
	public function GetOut_refund_no()
	{
		return $this->values['out_refund_no'];
	}
	/**
     * 判断商户退款单号是否存在
     * @return true 或 false
     **/
	public function IsOut_refund_noSet()
	{
		return array_key_exists('out_refund_no', $this->values);
	}


	/**
     * 设置微信退款单号refund_id、out_refund_no、out_trade_no、transaction_id四个参数必填一个，如果同时存在优先级为：refund_id>out_refund_no>transaction_id>out_trade_no
     * @param string $value 
     **/
	public function SetRefund_id($value)
	{
		$this->values['refund_id'] = $value;
	}
	/**
     * 获取微信退款单号refund_id、out_refund_no、out_trade_no、transaction_id四个参数必填一个，如果同时存在优先级为：refund_id>out_refund_no>transaction_id>out_trade_no的值
     * @return 值
     **/
	public function GetRefund_id()
	{
		return $this->values['refund_id'];
	}
	/**
     * 判断微信退款单号refund_id、out_refund_no、out_trade_no、transaction_id四个参数必填一个，如果同时存在优先级为：refund_id>out_refund_no>transaction_id>out_trade_no是否存在
     * @return true 或 false
     **/
	public function IsRefund_idSet()
	{
		return array_key_exists('refund_id', $this->values);
	}
}