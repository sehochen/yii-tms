<?phpnamespace wokaextend\wechat;use yii;use common\models\common\user\Wxuser;/** *  * 获取用户信息 * 该类实现了从微信公众平台获取code、通过code获取openid和access_token、 * 生成jsapi支付js接口所需的参数、生成获取共享收货地址所需的参数 *  * @author widy * */class AuthUserinfo{    public $APPID='';    public $SECRET='';	/**     * 网页授权接口微信服务器返回的数据，返回样例如下     * {     *  "access_token":"ACCESS_TOKEN",     *  "expires_in":7200,     *  "refresh_token":"REFRESH_TOKEN",     *  "openid":"OPENID",     *  "scope":"SCOPE",     *  "unionid": "o6_bmasdasdsad6_2sgVt7hMZOPfL"     * }     * 其中access_token可用于获取共享收货地址     * openid是微信支付jsapi支付接口必须的参数     * @var array     */    	public $data = null;	/**     *     * 通过跳转获取用户的openid，跳转流程如下：     * 1、设置自己需要调回的url及其其他参数，跳转到微信服务器https://open.weixin.qq.com/connect/oauth2/authorize     * 2、微信服务处理完成之后会跳转回用户redirect_uri地址，此时会带上一些参数，如：code     *     * @return 用户的openid     */	public function getUserInfo($wxid=1,$isSave=true)	{                $session=    yii::$app->session;                if(QYDebug)        {            $model=Wxuser::findOne(1);                        $session["WXOpenid".$wxid]=$model->openid;            $session["WXUserid".$wxid]=$model->id;                                   $session["WXUserInfo".$wxid]=$model->attributes;            return true;        }                        if(empty($session["WXOpenid".$wxid]) || empty($session["WXUserid".$wxid]))        {            //通过code获得openid            if (!isset($_GET['code'])){				                //触发微信返回code码                $baseUrl = urlencode('http://'.$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI']);                $url = $this->__CreateOauthUrlForCode($baseUrl);                Header("Location: $url");                exit();            } else {		                //如果相同Code则更新				if( $session["WXCode"] == $_GET['code'])				{                    $baseUrl = urlencode('http://'.$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI']);                    $url = $this->__CreateOauthUrlForCode($baseUrl);                    Header("Location: $url");                    exit();				}                //获取code码，以获取openid                $WXcode = $_GET['code'];                $session["WXCode"]=$WXcode;                     //判断用户是否存在                $openid = $this->getOpenidFromMp($WXcode,1,$wxid,$isSave);                $session["WXOpenid".$wxid]=$openid;					                return $openid;            }        }               return true;	}	/**     *     * 获取jsapi支付的参数     * @param array $UnifiedOrderResult 统一支付接口返回的数据     * @throws WxPayException     *     * @return json数据，可直接填入js函数作为参数     */	public function GetJsApiParameters($UnifiedOrderResult)	{		if(!array_key_exists("appid", $UnifiedOrderResult)		|| !array_key_exists("prepay_id", $UnifiedOrderResult)		|| $UnifiedOrderResult['prepay_id'] == "")		{			throw new WxPayException("参数错误");		}		$jsapi = new WxPayJsApiPay();		$jsapi->SetAppid($UnifiedOrderResult["appid"]);		$timeStamp = time();		$jsapi->SetTimeStamp("$timeStamp");		$jsapi->SetNonceStr(WxPayApi::getNonceStr());		$jsapi->SetPackage("prepay_id=" . $UnifiedOrderResult['prepay_id']);		$jsapi->SetSignType("MD5");		$jsapi->SetPaySign($jsapi->MakeSign());		$parameters = json_encode($jsapi->GetValues());		return $parameters;	}	/**     *     * 通过code从工作平台获取openid机器access_token     * @param string $code 微信跳转回来带上的code     *     * @return openid     */	public function GetOpenidFromMp($code,$type=0,$wxid,$isSave)	{		$url = $this->__CreateOauthUrlForOpenid($code);		//初始化curl		$ch = curl_init();		//设置超时		curl_setopt($ch, CURLOPT_TIMEOUT, 0);		curl_setopt($ch, CURLOPT_URL, $url);		curl_setopt($ch, CURLOPT_SSL_VERIFYPEER,FALSE);		curl_setopt($ch, CURLOPT_SSL_VERIFYHOST,FALSE);		curl_setopt($ch, CURLOPT_HEADER, FALSE);		curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);			//运行curl，结果以jason形式返回		$res = curl_exec($ch);		curl_close($ch);        /*         * { "access_token":"ACCESS_TOKEN",          "expires_in":7200,           "refresh_token":"REFRESH_TOKEN",           "openid":"OPENID",           "scope":"SCOPE" }          */		//取出openid		$data = json_decode($res,true);        //如果用户不存在则拉取用户信息        //拉取用户信息        if(isset($data["errcode"]))        {            SysLog::addError('获取用户权限错误,微信错误信息【'.$data["errcode"].'】',100001);             return false;        }             if($isSave)        {            $modelWxuser=Wxuser::findOne(["openid"=>$data['openid']]);            //如果没没获取过信息            if(!$modelWxuser)            {                $flagUser=   $this->_getUserinfo($data['openid'],$data['access_token']);	                if($flagUser === false)                {                    die("系统错误,请稍后再试!");                }                $modelWxuser =$flagUser;                            }        }                       $session=    yii::$app->session;          $session["WXOpenid".$wxid]=$modelWxuser->openid;         $session["WXUserid".$wxid]=$modelWxuser->id;         $session["WXUserInfo".$wxid]=$modelWxuser->attributes;              return true;	}    /**     * Summary of _getUserinfo  拉取信息     * @param mixed $openid openid     * @param mixed $access_token        * @return mixed     */    private function _getUserinfo($openid,$access_token)    {                $url ="https://api.weixin.qq.com/sns/userinfo?access_token=".$access_token."&openid=".$openid."&lang=zh_CN";        $ch = curl_init();        //设置超时        curl_setopt($ch, CURLOPT_TIMEOUT, 0);        curl_setopt($ch, CURLOPT_URL, $url);        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER,FALSE);        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST,FALSE);        curl_setopt($ch, CURLOPT_HEADER, FALSE);        curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);                //运行curl，结果以jason形式返回        $res = curl_exec($ch);        curl_close($ch);        //取出openid         $data = json_decode($res,true);        //用户信息处理               try{                        $modelWxuser=new Wxuser();            $userinfo= $data;            if(!isset($userinfo['nickname']))            {                                SysLog::addError("获取用户信息错误，请重新关注",100002);                exit;                            }                  $modelWxuser->openid=$openid;            $modelWxuser->nickname= self::filterEmoji($userinfo["nickname"]) ;            $modelWxuser->sex=$userinfo['sex'];                          $modelWxuser->city=$userinfo['city'];            $modelWxuser->country=$userinfo['country'];                            $modelWxuser->province=$userinfo['province'];            $modelWxuser->headimgurl=$userinfo['headimgurl'];              $modelWxuser->addtime =time();            $modelWxuser->issubscribe=0;                         if(!$modelWxuser->save())            {                SysLog::addError("存储用户信息错误",100003);                return false;            }               return $modelWxuser;        }        catch  (Exception $e){                                     SysLog::addError("存储用户信息错误,-异常错误",100004);            return false;        }            return false;    }        	/**     *     * 拼接签名字符串     * @param array $urlObj     *     * @return 返回已经拼接好的字符串     */	private function ToUrlParams($urlObj)	{		$buff = "";		foreach ($urlObj as $k => $v)		{			if($k != "sign"){				$buff .= $k . "=" . $v . "&";			}		}		$buff = trim($buff, "&");		return $buff;	}	/**     *     * 构造获取code的url连接     * @param string $redirectUrl 微信服务器回跳的url，需要url编码     *     * @return 返回构造好的url     */	private function __CreateOauthUrlForCode($redirectUrl)	{		$urlObj["appid"] =$this->APPID;		$urlObj["redirect_uri"] = "$redirectUrl";		$urlObj["response_type"] = "code";		$urlObj["scope"] = "snsapi_userinfo";		$urlObj["state"] = "STATE"."#wechat_redirect";		$bizString = $this->ToUrlParams($urlObj);		return "https://open.weixin.qq.com/connect/oauth2/authorize?".$bizString;	}	/**     *     * 构造获取open和access_toke的url地址     * @param string $code，微信跳转带回的code     *     * @return 请求的url     */	private function __CreateOauthUrlForOpenid($code)	{		$urlObj["appid"] =$this->APPID;		$urlObj["secret"] = $this->SECRET;		$urlObj["code"] = $code;		$urlObj["grant_type"] = "authorization_code";		$bizString = $this->ToUrlParams($urlObj);		return "https://api.weixin.qq.com/sns/oauth2/access_token?".$bizString;	}    /**     * Summary of filterEmoji     * 去除特殊表情符     * @param mixed $str      * @return mixed     */    public  function filterEmoji($str)    {        $str = preg_replace_callback(                '/./u',                function (array $match) {                    return strlen($match[0]) >= 4 ? '' : $match[0];                },                $str);        if(empty($str))        {            $str="FQ".uniqid();        }        return $str;    }}